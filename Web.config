<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
	<configSections>
		<!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=" requirePermission="false" />
		<sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
			<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
		</sectionGroup>
	</configSections>
	<appSettings>
		<add key="PassKey" value="YOGTg11N7m03yQPbU1DIBMbBxqCthu3c" />
		
		<add key="MicroInsuranceWS" value="http://ho-insurancews.pjlhuillier.sit/MicroInsuranceService.svc/" />
		
		<add key="CLIBMicrositeWS" value="http://ho-clibmicrositews.pjlhuillier.sit/CLIBMicrositeWS.svc/" />

		<!--<add key="CLIBMicrositeWS" value="http://localhost:50946/CLIBMicrositeWS.svc/" />-->

		<add key="FamilyDependentUI" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/DependentUI" />

		<add key="IQRDestinationType" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/DestinationType" />

		<add key="IQROptionalCoverage" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/OptionalCoverage" />
		
		<add key="IQRSecondaryProduct" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/SecondaryProduct" />
		
		<add key="IQRGetIfCovidCoverage" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetIfCovid" />

		<add key="EndPointMiddleLayer" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/Validation" />
		
		<add key="IQRPurchase" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Transaction/IQRPurchase" />
		
		<add key="IQRPurchaseFamily" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Transaction/IQRPurchaseFamily" />
		
		<add key="IQRPurchaseTravel" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Transaction/IQRPurchaseTravel" />
		
		<add key="IQRPurchasePet" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Transaction/IQRPurchasePet" />

		<add key="IMSSelectionList" value="http://ho-insurancews.pjlhuillier.test/CebOTGService.svc/Query/CebOTGGetAdditionalInfo" />

		<add key="SendSMS" value="http://ho-insurancews.pjlhuillier.test/SMSService.svc/Query/SendSMS" />

		<add key="TagInsuranceAsPaid" value="http://ho-insuranceiqrws.pjlhuillier.uat/IqrService.svc/Transaction/TagInsuranceAsPaid" />

		<add key="DisplayPaymentSummary" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetPaymentSummary" />

		<add key="NumberOfAvailableCOC" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetNoOfCocAvailable" />

		<add key="IQRValidateFields" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/ValidateFields" />
		
		<add key="XenditCreateInvoice" value="https://api.xendit.co/v2/invoices" />

		<add key="GetADCClientIfExist" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetADCClientIfExist" />
		
		<add key="GetAffiliateDetails" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetAffiliateDetails" />

		<add key="IQRSaveClientReferral" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Transaction/IQRSaveClientReferral" />
		
		
		
		<add key="GetClaimsIfExists" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetClaimsIfExists" />

		<add key="GetNatureofClaimRequest" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetNatureofClaimRequest" />
			 
		<add key="GetBenefitByNatureOfClaimRequest" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetBenefitByNatureOfClaimRequest" />

		<add key="GetDocumentBasedOnBenefitRequest" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetDocumentBasedOnBenefitRequest" />

		<add key="DocumentsSubmission" value="http://localhost:50774/DocumentsSubmission.aspx" />


		<add key="CLIBvoucherCode" value="CLIBPRODU000" />
		<add key="CLIBvoucherCode1" value="CLIBPRODU001" />
		<add key="CLIBvoucherCode2" value="CLIBPRODU002" />
		<add key="ProductCategoryPage" value="http://localhost:50774/ProductCategoryPage.aspx" />
		<add key="ProductRegistration" value="http://localhost:50774/ProductRegistration.aspx" />
	


		<add key="EnrollmentPage" value="http://localhost:50774/Enrollment.aspx" />
		<add key="EnrollmentPage2" value="http://localhost:50774/EnrollmentPage.aspx" />
		
		<add key="ThankYouPage" value="http://localhost:50774/ThankYouPage.aspx" />
		<add key="ProductPage" value="http://localhost:50774/ProductPage.aspx" />
		<add key="MenuPage" value="http://localhost:50774/Menu.aspx" />
		<add key="UploadPage" value="http://localhost:50774/UploadPage.aspx" />
			
		<add key="ProductDetails" value="http://localhost:50774/ProductDetails.aspx" />
		<add key="CheckEligibility" value="http://localhost:50774/CheckEligibility.aspx" />
		<add key="ProductRegistrationIQR" value="http://localhost:50774/ProductRegistration.aspx?PART=IQR" />
		<add key="ProductRegistrationEQR" value="http://localhost:50774/ProductRegistration.aspx?PART=EQR" />
		<add key="ConfirmationPage" value="http://localhost:50774/ConfirmationPage.aspx" />
		<add key="TermsAndConditions" value="http://localhost:50774/TermsAndConditions.aspx" />
		<add key="ErrorPage" value="http://localhost:50774/Error.aspx" />
		<add key="Claims" value="http://localhost:50774/Claims.aspx" />


		<add key="GetProductProfile" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetProductProfile" />
		
		<add key="GetReferralDetails" value="http://ho-insurancews.pjlhuillier.test/IqrService.svc/Query/GetReferralDetails" />


		<add key="PlatformAPI" value="" />
		<add key="PrivateKey" value="" />
		<add key="DataSiteKey" value="" />
		<add key="NumberOfCOCs" value="1" />
		<add key="DateTimeFormat" value="MM/dd/yyyy" />
		<add key="productImagePath" value="Images/" />
		<add key="LAZ" value="Images/Lazada.jpg" />
		<add key="CLIB" value="Images/CLIB.png" />
		<add key="VHI" value="VHI" />
		<add key="IQR" value="IQR" />
		<add key="EQR" value="EQR" />
		<add key="PJ4" value="PJ4" />

		<add key="CLIBPlatformName" value="CLIB Microsite" />
		<add key="CLIBAPIKey" value="7cb8f6e706ea8e6dff1d5fcbe4b38290" />
		<add key="CEBOTGAPIkey" value="7d36153763d5b333ff95760f76ec622c" />
		<add key="CLIBProviderCode" value="PISC" />
		<add key="CLIBPartnerCode" value="PJ4" />
		<add key="CLIBrefCode" value="CLIB" />
		<add key="IsTlsRequired" value="true" />
		<add key="SecurityProtocolType" value="3072" />
		
		<add key="ProxyServer" value="raichu.ncvi.uat" />
		<add key="ProxyPort" value="3128" />

		<add key="Authorization" value="Authorization" />
		<!--UAT-->
		<add key="BasicAuthorization" value="Basic eG5kX2RldmVsb3BtZW50X3hNRUtFc3ZKaXZqNDF3cG1ISW5FUmJVSEZ5U2UyemRwTEVBR2tBVkxrNEVRTkw2cjJ4Z2xuQUN4a0VSSzA6" />
		<!--PROD-->
		<!--<add key="BasicAuthorization" value="Basic eG5kX3Byb2R1Y3Rpb25fZFRjYlFpY1c0c1BzOVF6RmJjTjNlV1JTc2UxRzNVaUlTRm94TFJ6aGVOd3NtcXoxZUVBS0RCRm95WW1pWXY6" />-->

		<!--3072-->
		<add key="LearnMoreLink" value="http://localhost:50774/microinsurance/" />
		<add key="FolderPath" value="Files/" />
		<!--<add key="TokenKey" value=""/>-->
		<add key="ClientReferral" value="http://localhost:50774/ClientReferral.aspx" />
		<!--Microbiz Protek-->
		<add key="MBizQuestionnaire" value="http://localhost:50774/MBizQuestionnaire.aspx" />
		<add key="MBizOwnerDetails" value="http://localhost:50774/MBizOwnerDetails.aspx" />
		<add key="MBizDetails" value="http://localhost:50774/MBizDetails.aspx" />
		<add key="MBizNotQuali" value="http://localhost:50774/MBizNotQuali.aspx" />
		<add key="MBizOwnerDetails2" value="http://localhost:50774/MBizOwnerDetails2.aspx" />
		<add key="MBizPACoverage" value="http://localhost:50774/MBizPACoverage.aspx" />
		<add key="MBizDeclaration" value="http://localhost:50774/MBizDeclaration.aspx" />
		<add key="MBizThankYou" value="http://localhost:50774/MBizThankYou.aspx" />
		<add key="CLINT" value="CLIBInternalSales@pjlhuillier.com" />
		<add key="CLEXT" value="CLIBexternalsales@pjlhuillier.com" />
		<add key="CLVIS" value="CLIBCebu@pjlhuillier.com" />
		<add key="CLADC" value="amenriquez@pjlhuillier.com" />
		
	</appSettings>
	<connectionStrings>
		<!--<add name="DefaultConnection" providerName="System.Data.SqlClient" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-CLIBMicrosite-20200609100518;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-CLIBMicrosite-20200609100518.mdf"/>-->
		<add name="Excel03ConString" connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source={0}; Extended Properties='Excel 8.0;HDR={1}'" />
		<add name="Excel07ConString" connectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0}; Extended Properties='Excel 8.0;HDR={1}'" />
	</connectionStrings>
	<system.web>
	  <httpCookies httpOnlyCookies="true" requireSSL="true"/>
		<customErrors mode="On" defaultRedirect="Error.aspx">
			<error statusCode="403" redirect="Error.aspx" />
			<error statusCode="404" redirect="Error.aspx" />
			<error statusCode="500" redirect="Error.aspx" />
			<error statusCode="522" redirect="Error.aspx" />
		</customErrors>
		<httpRuntime enableVersionHeader="false" useFullyQualifiedRedirectUrl="true" maxRequestLength="15360" requestLengthDiskThreshold="15360" />
		<machineKey validation="AES" />
		<compilation targetFramework="4.0" debug="true">
			<!--<assemblies>
        <add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken="/>
      </assemblies>-->
		</compilation>
		<authentication mode="Forms">
			<forms defaultUrl="~/ProductRegistration.aspx" loginUrl="~/ProductRegistration.aspx" slidingExpiration="true" timeout="20" />
		</authentication>
		<profile defaultProvider="DefaultProfileProvider">
			<providers>
				<add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=" connectionStringName="DefaultConnection" applicationName="/" />
			</providers>
		</profile>
		<membership defaultProvider="DefaultMembershipProvider">
			<providers>
				<add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
			</providers>
		</membership>
		<roleManager defaultProvider="DefaultRoleProvider">
			<providers>
				<add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=" connectionStringName="DefaultConnection" applicationName="/" />
			</providers>
		</roleManager>
		<!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
      -->
		<sessionState mode="InProc" customProvider="DefaultSessionProvider">
			<providers>
				<add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=" connectionStringName="DefaultConnection" />
			</providers>
		</sessionState>

		
	</system.web>
	<system.webServer>
		<modules>
			<add name="CustomCookieModule" type="CustomCookieModule" />
		</modules>
		<httpErrors errorMode="Custom" existingResponse="Replace">
			<remove statusCode="404" subStatusCode="-1" />
			<error statusCode="404" prefixLanguageFilePath="" path="/Error.aspx" responseMode="ExecuteURL" />
			<remove statusCode="500" subStatusCode="-1" />
			<error statusCode="500" prefixLanguageFilePath="" path="/Error.aspx" responseMode="ExecuteURL" />
			<remove statusCode="403" subStatusCode="-1" />
			<error statusCode="403" prefixLanguageFilePath="" path="/Error.aspx" responseMode="ExecuteURL" />
			<remove statusCode="522" subStatusCode="-1" />
			<error statusCode="522" prefixLanguageFilePath="" path="/Error.aspx" responseMode="ExecuteURL" />
		</httpErrors>
		<httpProtocol>
			<customHeaders>
				<clear />
				 <!--<remove name="X-Powered-By" />
                <add name="Server" value=""/>-->
				<add name="X-Frame-Options" value="SAMEORIGIN" />
				<add name="X-Xss-Protection" value="1; mode=block" />
				<add name="X-Content-Type-Options" value="nosniff" />
				<add name="Referrer-Policy" value="noreferrer" />
				<add name="Content-Security-Policy" value="connect-src 'self';" />
				<add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains" />
				<add name="Feature-Policy" value="accelerometer 'self'; camera 'self'; geolocation 'self'; gyroscope 'self'; magnetometer 'self'; microphone 'self'; payment 'self'; usb 'self'" />
				<!--<add name="Set-Cookie" value="SameSite=Lax; path=/; HttpOnly; Secure" />-->
			</customHeaders>
		</httpProtocol>
		<defaultDocument>
			<files>
				<remove value="default.aspx" />
				<remove value="iisstart.htm" />
				<remove value="index.html" />
				<remove value="index.htm" />
				<remove value="Default.asp" />
				<remove value="Default.htm" />
				<add value="ProductRegistration.aspx" />
			</files>
		</defaultDocument>
		<!--<security>
			--><!--<requestFiltering removeServerHeader ="true" />--><!--
			<requestFiltering removeServerHeader ="true">
				<denyUrlSequences>
					<add sequence="~"/>
				</denyUrlSequences>
			</requestFiltering>
		</security>-->
		<security>
			<requestFiltering removeServerHeader="true">
				<denyUrlSequences>
					<add sequence="~" />
				</denyUrlSequences>
				<verbs allowUnlisted="true">
					<add verb="OPTIONS" allowed="false" />
				</verbs>
				<!--<hiddenSegments>
					<add segment="Images" />
					<add segment="Scripts" />
					<add segment="Style" />
					<add segment="JScripts" />
				</hiddenSegments>-->
			</requestFiltering>
			
			<!--<access sslFlags="Ssl, SslNegotiateCert, SslRequireCert" />
			<authentication>
				<iisClientCertificateMappingAuthentication enabled="true" />
				<anonymousAuthentication enabled="true" />
				<basicAuthentication enabled="false" />
				<digestAuthentication enabled="false" />
				<windowsAuthentication enabled="false" />
			</authentication>-->
			
		</security>
		<!--<rewrite>
			<rules>
				<rule name="RewriteJS" stopProcessing="true">
					<match url="^obfuscated-js/(.*)$" />
					<action type="Rewrite" url="Scripts/{R:1}" />
				</rule>
			</rules>
		</rewrite>-->

	</system.webServer>
	<runtime>
		<webHttpBinding>
			<binding name="webBinding" maxBufferSize="2147483647" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" transferMode="streamed">
				<readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxTableCharCount="2147483647" />
			</binding>
		</webHttpBinding>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="" />
				<bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="" />
				<bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="EntityFramework" publicKeyToken="" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		<!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
		<!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
		<legacyHMACWarning enabled="0" />
		<!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
         to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
     -->
	</runtime>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
	<system.net>
		<defaultProxy enabled="true">
			<!--nakatrue to-->
			<!--<proxy autoDetect="false" bypassonlocal="false" proxyaddress="http:127.0.0.1:8888" usesystemdefault="false"></proxy>-->
		</defaultProxy>
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
           before trusting HTTPS certificates.  But this setting tends to not 
           be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net>
	<dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
		<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
		<!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
		<openid>
			<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
            <add endpoint="https://www.google.com/accounts/o8/ud" />
          </trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
               with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty>
		</openid>
	</dotNetOpenAuth>
	<uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
         which is necessary for OpenID urls with unicode characters in the domain/host name.
         It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri>
	<system.serviceModel>
		<bindings />
		<client />
	</system.serviceModel>
</configuration>
<!--ProjectGuid: 6c6efd4b-c5e3-4194-95bb-a7e2e7a49744-->